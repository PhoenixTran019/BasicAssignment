@model Cinema_Assignment.Models.SeatBookingViewModel
@{
    ViewData["Title"] = "Chọn ghế";
}

<style>
    .seat {
        width: 36px;
        height: 36px;
        margin: 5px;
        line-height: 36px;
        text-align: center;
        font-size: 13px;
        border-radius: 6px;
        cursor: pointer;
        color: #000;
    }

    .locked {
        background-color: #f55 !important;
        pointer-events: none;
        cursor: not-allowed;
        color: white;
    }

    .selected {
        background-color: #86f58e !important;
    }
</style>

<div class="container mt-4">
    <h3>@Model.MovieTitle</h3>
    <p>Xuất chiếu: @Model.StartTime.ToString("dd/MM/yyyy HH:mm")</p>

    <div class="row">
        <!-- Layout ghế -->
        <div class="col-md-8">
            <div class="text-center mb-3"><strong>Màn hình</strong></div>

            @foreach (var row in Model.Seats.Select(s => s.Row).Distinct().OrderBy(r => r))
            {
                <div class="d-flex justify-content-center">
                    @foreach (var seat in Model.Seats.Where(s => s.Row == row).OrderBy(s => s.Col))
                    {
                        var seatId = seat.SeatID;
                        var type = Model.SeatTypes[seat.TypeID];
                        var style = $"background-color:{type.Color}";
                        var isLocked = Model.LockedSeatIds.Contains(seatId);
                        var classes = $"seat {(isLocked ? "locked" : "")}";

                        <div class="@classes"
                             style="@style"
                             data-seat="@seatId"
                             data-price="@type.Price"
                             onclick="selectSeat(this)">
                            @seatId
                        </div>
                    }
                </div>
            }

            <div class="mt-3">
                @foreach (var type in Model.SeatTypes.Values)
                {
                    <span class="seat me-2" style="background-color:@type.Color">
                        @type.TypeName (@type.Price.ToString("n0")&#8363;)
                    </span>
                }

                <span class="seat locked ms-3"></span> Đã bán
                <span class="seat selected ms-2"></span> Đang chọn
            </div>

        <!-- Sidebar thông tin vé -->
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header"><strong>Thông tin vé</strong></div>
                <div class="card-body">
                    <ul id="seatList" class="list-group mb-3"></ul>
                    <div class="d-flex justify-content-between">
                        <span><strong>Tổng tiền:</strong></span>
                        <span id="totalPrice">0₫</span>
                    </div>
                    <form id="bookingForm" method="post" asp-action="ConfirmBooking" asp-controller="Booking">
                        <input type="hidden" name="ShowtimeId" value="@Model.ShowtimeId" />
                        <input type="hidden" name="SelectedSeats" id="SelectedSeatsInput" />
                        <button type="submit" class="btn btn-primary w-100 mt-3" id="btnNext" disabled>Tiếp tục đặt vé</button>
                    </form>
                    

                </div>
            </div>
        </div>
    </div>
</div>

    <form method="get" asp-controller="Booking" asp-action="ConfirmBooking" id="confirmForm">
        <input type="hidden" name="ShowtimeId" value="@Model.ShowtimeId" />
        <input type="hidden" name="SelectedSeats" id="SelectedSeatsConfirmInput" />
        <button type="submit" class="btn btn-warning w-100 mt-3" id="btnConfirm" disabled>Xác nhận ghế</button>
    </form>

@section Scripts {
    <script>
        const selectedSeats = new Set();

        function selectSeat(el) {
            const seatId = el.dataset.seat;
            const price = parseInt(el.dataset.price);

            if (el.classList.contains("selected")) {
                el.classList.remove("selected");
                selectedSeats.delete(seatId);
            } else {
                el.classList.add("selected");
                selectedSeats.add(seatId);
            }

            updateSummary();
        }

        function updateSummary() {
            const list = document.getElementById("seatList");
            const priceEl = document.getElementById("totalPrice");
            const input = document.getElementById("SelectedSeatsInput");
            const btn = document.getElementById("btnNext");

            list.innerHTML = "";
            let total = 0;
            let seatArray = [];

            selectedSeats.forEach(seatId => {
                const el = document.querySelector(`[data-seat='${seatId}']`);
                const price = parseInt(el.dataset.price);
                total += price;
                seatArray.push(seatId);

                const li = document.createElement("li");
                li.className = "list-group-item d-flex justify-content-between";
                li.innerHTML = `<span>${seatId}</span><span>${price.toLocaleString()}₫</span>`;
                list.appendChild(li);
            });

            priceEl.innerText = total.toLocaleString() + "₫";
            input.value = seatArray.join(",");
            btn.disabled = seatArray.length === 0;
        }
                    function updateSummary() {
                const list = document.getElementById("seatList");
                const priceEl = document.getElementById("totalPrice");
                const input = document.getElementById("SelectedSeatsInput");
                const confirmInput = document.getElementById("SelectedSeatsConfirmInput");
                const btn = document.getElementById("btnNext");
                const btnConfirm = document.getElementById("btnConfirm");

                list.innerHTML = "";
                let total = 0;
                let seatArray = [];

                selectedSeats.forEach(seatId => {
                    const el = document.querySelector(`[data-seat='${seatId}']`);
                    const price = parseInt(el.dataset.price);
                    total += price;
                    seatArray.push(seatId);

                    const li = document.createElement("li");
                    li.className = "list-group-item d-flex justify-content-between";
                    li.innerHTML = `<span>${seatId}</span><span>${price.toLocaleString()}&#8363;</span>`;
                    list.appendChild(li);
                });

                priceEl.innerHTML = total.toLocaleString() + "&#8363;";
                input.value = seatArray.join(",");
                confirmInput.value = seatArray.join(",");
                btn.disabled = seatArray.length === 0;
                btnConfirm.disabled = seatArray.length === 0;
            }

    </script>
}
