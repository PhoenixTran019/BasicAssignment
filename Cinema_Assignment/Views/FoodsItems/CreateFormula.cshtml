@using Newtonsoft.Json
@model Cinema_Assignment.Models.FoodFormulaViewModel
@{
    ViewBag.Title = "Tạo công thức";
    var allItems = ViewBag.AllItems as List<Cinema_Assignment.Models.FoodItemDetailModel>;
}

<h2>Thêm công thức cho món: <strong>@ViewBag.FoodName</strong></h2>

<form asp-action="CreateFormula" method="post">
    <input type="hidden" asp-for="FoodID" />

    <table class="table table-bordered" id="itemTable">
        <thead class="table-secondary">
            <tr>
                <th>Nguyên liệu</th>
                <th>Số lượng</th>
                <th></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <button type="button" class="btn btn-secondary" onclick="addRow()">➕ Thêm nguyên liệu</button>
    <br /><br />
    <button type="submit" class="btn btn-primary">Lưu</button>
    <a asp-action="IndexAllFormula" class="btn btn-outline-secondary">Quay lại</a>
</form>

@section Scripts {
    <script>
        var itemList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.AllItems));

        function addRow() {
            var index = document.querySelectorAll('#itemTable tbody tr').length;
            var row = `
                <tr>
                    <td>
                        <select class="form-select" name="Items[${index}].ItemID" required>
                            <option value="">-- chọn --</option>
                            ${itemList.map(i => `<option value="${i.ItemID}">${i.ItemName}</option>`).join('')}
                        </select>
                    </td>
                    <td>
                        <input type="number" class="form-control" name="Items[${index}].QuantityPerFood" min="1" required />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">X</button>
                    </td>
                </tr>`;
            document.querySelector("#itemTable tbody").insertAdjacentHTML('beforeend', row);
        }

        function removeRow(btn) {
            btn.closest('tr').remove();
            renumberRows();
        }

        function renumberRows() {
            const rows = document.querySelectorAll("#itemTable tbody tr");
            rows.forEach((row, i) => {
                row.querySelectorAll("select, input").forEach(input => {
                    if (input.name.includes("ItemID")) input.name = `Items[${i}].ItemID`;
                    if (input.name.includes("QuantityPerFood")) input.name = `Items[${i}].QuantityPerFood`;
                });
            });
        }
    </script>
}
